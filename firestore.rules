/**
 * @fileoverview Firestore Security Rules for the Wedding App.
 *
 * Core Philosophy:
 * This ruleset prioritizes ease of use for guests while providing administrative control over site configuration.
 * Guest information (RSVP, dietary needs) is publicly accessible for reading. Photo uploads are also publicly accessible.
 * Modifications of guest data or site configuration are disallowed at the rules level, and must be handled by backend administrative tools.
 *
 * Data Structure:
 * - /guests/{guestId}: Stores guest RSVP information. Publicly readable, writes disabled.
 * - /photos/{photoId}: Stores wedding photos. Publicly readable, writes disabled.
 * - /venues/{venueId}: Stores venue information. Publicly readable, writes disabled.
 * - /site_configuration/config: Stores site-wide settings. Publicly readable, writes disabled.
 *
 * Key Security Decisions:
 * - Guest listing is enabled for easy access to RSVP data.
 * - Photo listing is enabled to display the wedding gallery.
 * - All write operations are disabled at the rules level, requiring backend admin tools for data modification.
 * - No user-specific data trees or complex access control.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows public read access to guest information. Writes are disallowed.
     * @path /guests/{guestId}
     * @allow (get, list): Any user can read guest information.
     * @deny (create, update, delete): No user can create, update, or delete guest information directly.
     * @principle Allows open access to guest data for easy retrieval and RSVP information.
     */
    match /guests/{guestId} {
      allow get: if true;
      allow list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows public read access to photos. Writes are disallowed.
     * @path /photos/{photoId}
     * @allow (get, list): Any user can read photo information.
     * @deny (create, update, delete): No user can create, update, or delete photos directly.
     * @principle Allows open access to photo gallery for all users.
     */
    match /photos/{photoId} {
      allow get: if true;
      allow list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows public read access to venue information. Writes are disallowed.
     * @path /venues/{venueId}
     * @allow (get, list): Any user can read venue information.
     * @deny (create, update, delete): No user can create, update, or delete venue information directly.
     * @principle Allows open access to venue data for all users.
     */
    match /venues/{venueId} {
      allow get: if true;
      allow list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows public read access to site configuration. Writes are disallowed.
     * @path /site_configuration/config
     * @allow (get): Any user can read the site configuration.
     * @deny (create, update, delete, list): No user can create, update, delete, or list site configurations directly.
     * @principle Restricts modifications to site configuration to prevent unauthorized changes.
     */
    match /site_configuration/config {
      allow get: if true;
      allow list: if false;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }
  }
}