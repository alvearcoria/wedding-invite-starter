/**
 * @fileoverview Firestore Security Rules for the Wedding App.
 *
 * Core Philosophy:
 * This ruleset prioritizes security by strictly controlling access to data based on ownership and role-based permissions.
 *
 * Data Structure:
 * - /guests/{guestId}: Stores individual guest information.  Write access is restricted; read access is public.
 * - /photos/{photoId}: Stores publicly accessible wedding photos.
 * - /site_configuration/{configId}: Stores site-wide configuration settings.  Write access is restricted; read access is public.
 *
 * Key Security Decisions:
 * - Public Read Access: The `photos` and `site_configuration` collections have public read access (`get`, `list`).
 * - Restricted Writes: The `guests`, and `site_configuration` collections have restricted write access for now.
 * - Denormalization for Authorization: Not explicitly used in this version, but the design anticipates the possible future need to replicate authorization data directly into documents for faster rules and to avoid using `get()` calls.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Manages guest information. Write access is restricted; read access is public.
     * @path /guests/{guestId}
     * @allow get: if true;
     * @allow list: if true;
     * @allow create: if false;
     * @allow update: if false;
     * @allow delete: if false;
     * @principle Restricts write access to guest data.
     */
    match /guests/{guestId} {
      allow get: if true;
      allow list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Manages publicly accessible wedding photos.
     * @path /photos/{photoId}
     * @allow get: if true;
     * @allow list: if true;
     * @allow create: if false;
     * @allow update: if false;
     * @allow delete: if false;
     * @principle Allows public read access to photos.
     */
    match /photos/{photoId} {
      allow get: if true;
      allow list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Manages site-wide configuration settings. Write access is restricted; read access is public.
     * @path /site_configuration/{configId}
     * @allow get: if true;
     * @allow list: if true;
     * @allow create: if false;
     * @allow update: if false;
     * @allow delete: if false;
     * @principle Restricts write access to site configuration data.
     */
    match /site_configuration/{configId} {
      allow get: if true;
      allow list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }
  }
}