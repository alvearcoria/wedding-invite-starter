/**
 * @file Firestore Security Rules
 * @description This ruleset enforces a security model where authenticated users have varying levels of access to different collections:
 * - `/guests/{guestId}`: Only authenticated users can create guests.
 * - `/photos/{photoId}`: Publicly readable, but create/update/delete operations are restricted to authenticated users.
 * - `/site_configuration/{configId}`: Only authenticated users can manage site configuration.
 *
 * Data Structure:
 * - /guests/{guestId}: Stores guest information.
 * - /photos/{photoId}: Stores photo gallery images.
 * - /site_configuration/{configId}: Stores website configuration settings. There is only one configuration document.
 *
 * Key Security Decisions:
 * - Guests: Only authenticated users can create guests.
 * - Photos: Photos are publicly readable but only authenticated users can add/modify them.
 * - Site Configuration: Only authenticated users can modify the site configuration.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Manages access to guest data. Guests can only be created.
     * @path /guests/{guestId}
     * @allow (create) - Authenticated user can create guest data.
     * @deny (get) - Guests cannot be individually read.
     * @deny (list) - Guests cannot be listed.
     * @deny (update) - Guests cannot be updated.
     * @deny (delete) - Guests cannot be deleted.
     * @principle Authenticated users can create guest data.
     */
    match /guests/{guestId} {
      allow get: if false;
      allow list: if false;
      allow create: if isSignedIn();
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Manages access to photos in the gallery. Photos are publicly readable, but protected on write operations.
     * @path /photos/{photoId}
     * @allow (get, list) - Any user can read photos.
     * @allow (create, update, delete) - Only authenticated users can manage photos.
     * @deny (create, update, delete) - Unauthenticated users cannot manage photos.
     * @principle Public read access with authenticated-user-only writes.
     */
    match /photos/{photoId} {
      allow get: if true;
      allow list: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && resource != null;
      allow delete: if isSignedIn() && resource != null;
    }

    /**
     * @description Manages site configuration settings.
     * @path /site_configuration/{configId}
     * @allow (get) - Any user can read the site configuration.
     * @allow (create, update, delete) - Only authenticated users can manage the site configuration.
     * @deny (create, update, delete) - Unauthenticated users cannot manage the site configuration.
     * @principle Authenticated user can manage the site configuration.
     */
    match /site_configuration/{configId} {
      allow get: if true;
      allow list: if false;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && resource != null;
      allow delete: if isSignedIn() && resource != null;
    }
  }

  function isSignedIn() {
    return request.auth != null;
  }
}